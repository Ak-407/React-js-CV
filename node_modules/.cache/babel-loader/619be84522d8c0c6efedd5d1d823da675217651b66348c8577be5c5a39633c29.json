{"ast":null,"code":"var _jsxFileName = \"/Users/syedamaaniqbal/Desktop/amaancv/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Head from './components/head';\nimport Middle from './components/middle';\nimport Middle2 from './components/middle2';\nimport Middle3 from './components/middle3';\nimport Middle4 from './components/middle4';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport animateScrollTo from 'animated-scroll-to';\n\n// It returns a promise which will be resolved when scroll animation is finished\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nanimateScrollTo(500).then(hasScrolledToPosition => {\n  // scroll animation is finished\n\n  // \"hasScrolledToPosition\" indicates if page/element\n  // was scrolled to a desired position\n  // or if animation got interrupted\n  if (hasScrolledToPosition) {\n    // page is scrolled to a desired position\n  } else {\n    // scroll animation was interrupted by user\n    // or by another call of \"animateScrollTo\"\n  }\n});\n\n// const observer = new IntersectionObserver((entries) => {\n//   entries.forEach((entry) => {\n//   console.log(entry)\n//   if(entry.isIntersecting){\n//   entry.target.classList.add('show');\n//   } else{\n//   entry.target.classList.remove('show');\n//   }\n//   });\n// });\n\n// const hiddenElements = document.querySelectorAll('.hidden');\n// hiddenElements.forEach((el) => observer.observe(el));\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Middle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Middle3, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Middle2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Middle4, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","Head","Middle","Middle2","Middle3","Middle4","animateScrollTo","then","hasScrolledToPosition","render","document","getElementById"],"sources":["/Users/syedamaaniqbal/Desktop/amaancv/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Head from './components/head';\nimport Middle from './components/middle';\nimport Middle2 from './components/middle2';\nimport Middle3 from './components/middle3';\nimport Middle4 from './components/middle4';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport animateScrollTo from 'animated-scroll-to';\n\n// It returns a promise which will be resolved when scroll animation is finished\n\nanimateScrollTo(500).then(hasScrolledToPosition => {\n  // scroll animation is finished\n\n  // \"hasScrolledToPosition\" indicates if page/element\n  // was scrolled to a desired position\n  // or if animation got interrupted\n  if (hasScrolledToPosition) {\n    // page is scrolled to a desired position\n  } else {\n    // scroll animation was interrupted by user\n    // or by another call of \"animateScrollTo\"\n  }\n});\n\n// const observer = new IntersectionObserver((entries) => {\n//   entries.forEach((entry) => {\n//   console.log(entry)\n//   if(entry.isIntersecting){\n//   entry.target.classList.add('show');\n//   } else{\n//   entry.target.classList.remove('show');\n//   }\n//   });\n// });\n\n\n\n// const hiddenElements = document.querySelectorAll('.hidden');\n// hiddenElements.forEach((el) => observer.observe(el));\n\nReactDOM.render(<div>\n  \n\n<Head />\n<Middle />\n<Middle3 />\n<Middle2 />\n<Middle4 />\n\n\n \n\n</div>\n, document.getElementById(\"root\"));\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,sCAAsC;AAE7C,OAAOC,eAAe,MAAM,oBAAoB;;AAEhD;AAAA;AAEAA,eAAe,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,qBAAqB,IAAI;EACjD;;EAEA;EACA;EACA;EACA,IAAIA,qBAAqB,EAAE;IACzB;EAAA,CACD,MAAM;IACL;IACA;EAAA;AAEJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEAR,QAAQ,CAACS,MAAM,eAAC;EAAA,wBAGhB,QAAC,IAAI;IAAA;IAAA;IAAA;EAAA,QAAG,eACR,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG,eACV,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG,eACX,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG,eACX,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAAA;EAAA;EAAA;EAAA;AAAA,QAKL,EACJC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}